{"version":3,"sources":["assets/icons/add.svg","assets/icons/close.svg","assets/icons/arrow.svg","GlobalStyle.js","Context.jsx","components/job-container/styles.js","components/add-jobtask/styles.js","components/add-jobtask/index.jsx","components/job-container/job/styles.js","components/job-container/job/fields/styles.js","utils/capitalize.js","components/job-container/job/fields/InputHandler.jsx","components/job-container/job/fields/Field.jsx","components/job-container/job/fields/index.jsx","components/job-container/job/CloseIcon.jsx","components/job-container/job/index.jsx","components/estimate/styles.js","components/estimate/pdf-document/styles.js","components/estimate/pdf-document/DateWritten.jsx","components/estimate/pdf-document/index.jsx","components/estimate/index.jsx","components/job-container/index.jsx","components/landing/styles.js","components/landing/index.jsx","components/header/style.js","components/header/index.jsx","components/content-styled.js","App.jsx","index.jsx"],"names":["module","exports","GlobalStyle","createGlobalStyle","JobsContext","createContext","useJobs","useContext","jobsArray","addJob","removeJob","setFieldValue","getTotalValue","Context","children","initialState","id","shortid","generate","local","trabalho","valor","useState","setJobsArray","Provider","value","prevState","filter","el","index","name","currentState","newState","map","item","Number","reduce","prev","next","FormMobileStyled","styled","form","GenerateButtonStyled","PDFDownloadLink","JobWrapper","div","AddJobTaskStyled","button","AddIconStyled","img","DescriptionStyled","p","AddJobTask","onClick","src","add","JobStyled","CloseIconStyled","LabelTitleStyled","h3","FieldsStyled","FieldStyled","LabelStyled","InputStyled","input","capitalize","text","lower","toLowerCase","charAt","toUpperCase","slice","InputHandler","type","placeholder","onChange","e","target","Field","label","Fields","CloseIcon","close","Job","i","key","PDFWrapperStyled","PreviewLabelStyled","styles","StyleSheet","create","page","padding","fontFamily","display","flexDirection","flex","micg","marginTop","fontSize","fontWeight","description","job","lastPart","date","textAlign","payment","bold","currentDate","Date","DateWritten","month","toLocaleString","day","year","split","pop","style","Font","register","family","fonts","PDFDocument","totalValue","size","length","Estimate","document","fileName","blob","url","loading","error","console","log","JobContainer","onSubmit","preventDefault","LandingStyled","TitleStyled","h1","ContentStyled","ButtonStyled","ArrowStyled","Landing","getElementById","scrollIntoView","arrow","HeaderStyled","LogoStyled","h4","Header","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7688bfc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.015352ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.41679b26.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.a3b6918a.svg\";","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n\n    #root, html, body {\n        height: 100%;\n    }\n    *, *::before, *::after {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        box-sizing: inherit;\n        font-weight: 500;\n        box-sizing: border-box;\n        width: inherit;\n        -webkit-appearance: none;\n    }\n    html {\n        font-size: 62.5%;\n        font-family: Ubuntu;\n        scroll-behavior: smooth;\n    }\n\n    body {\n        box-sizing: inherit;\n        @media (min-width: 768px) {\n            background-color: #F8F8F8;\n        }\n        \n    }\n    button {\n        cursor: pointer;\n    }\n\n`;\n\nexport default GlobalStyle;\n","import React, { useState, createContext, useContext } from 'react';\nimport shortid from 'short-id';\nconst JobsContext = createContext();\nconst Context = ({ children }) => {\n  const initialState = [\n    {\n      id: shortid.generate(),\n      local: '',\n      trabalho: '',\n      valor: 0,\n    },\n  ];\n  const [jobsArray, setJobsArray] = useState(initialState);\n\n  function addJob() {\n    setJobsArray((prevState) => [\n      ...prevState,\n      { id: shortid.generate(), local: '', trabalho: '', valor: 0 },\n    ]);\n  }\n\n  function removeJob(id) {\n    setJobsArray((prevState) =>\n      prevState.filter((el) => {\n        return el.id !== id;\n      })\n    );\n  }\n\n  function setFieldValue(index, name, value) {\n    setJobsArray((prevState) => {\n      let currentState = [...prevState];\n      let newState = { ...currentState[index] };\n      newState[name] = value;\n      currentState[index] = newState;\n      return currentState;\n    });\n  }\n\n  function getTotalValue() {\n    return jobsArray\n      .map((item) => Number(item.valor))\n      .reduce((prev, next) => prev + next);\n  }\n\n  return (\n    <JobsContext.Provider\n      value={{ jobsArray, addJob, removeJob, setFieldValue, getTotalValue }}\n    >\n      {children}\n    </JobsContext.Provider>\n  );\n};\n\nexport function useJobs() {\n  const {\n    jobsArray,\n    addJob,\n    removeJob,\n    setFieldValue,\n    getTotalValue,\n  } = useContext(JobsContext);\n  return { jobsArray, addJob, removeJob, setFieldValue, getTotalValue };\n}\n\nexport default Context;\n","import styled from 'styled-components';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\n\nexport const FormMobileStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 20px;\n`;\n\nexport const GenerateButtonStyled = styled(PDFDownloadLink)`\n  margin-top: 45px;\n  height: 50px;\n  background: #2973e2;\n  box-shadow: 4px 10px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  color: white;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n  width: 100%;\n  color: #ffffff;\n  text-decoration: none;\n`;\n\nexport const JobWrapper = styled.div`\n  @media (min-width: 768px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: 5%;\n    justify-content: space-between;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const AddJobTaskStyled = styled.button`\n  width: 100%;\n  height: 171px;\n  background: #ffffff;\n  box-shadow: 4px 10px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 50px;\n  @media (min-width: 768px) {\n    height: 350px;\n    margin-top: 90px;\n  }\n`;\n\nexport const AddIconStyled = styled.img`\n  width: 35px;\n  height: 35px;\n`;\n\nexport const DescriptionStyled = styled.p`\n  font-size: 16px;\n  margin-top: 16px;\n  letter-spacing: 0.05em;\n  color: #a6a6a6;\n  text-align: center;\n  font-weight: 600;\n`;\n","import React from 'react';\nimport { AddJobTaskStyled, AddIconStyled, DescriptionStyled } from './styles';\nimport { useJobs } from '../../Context';\nimport add from '../../assets/icons/add.svg';\n\nconst AddJobTask = () => {\n  const { addJob } = useJobs();\n\n  return (\n    <AddJobTaskStyled onClick={() => addJob()}>\n      <AddIconStyled src={add} />\n      <DescriptionStyled>Adicionar Tarefa</DescriptionStyled>\n    </AddJobTaskStyled>\n  );\n};\n\nexport default AddJobTask;\n","import styled from 'styled-components';\n\nexport const JobStyled = styled.div`\n  margin-top: 45px;\n  @media (min-width: 768px) {\n  }\n`;\n\nexport const CloseIconStyled = styled.img`\n  width: 16px;\n  margin-left: 9px;\n  cursor: pointer;\n`;\n\nexport const LabelTitleStyled = styled.h3`\n  display: flex;\n  font-size: 20px;\n  letter-spacing: 0.01em;\n  color: #505d68;\n  font-weight: bold;\n`;\n","import styled from 'styled-components';\n\nexport const FieldsStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media (min-width: 768px) {\n    margin-top: 20px;\n    background: #fafafa;\n    border: 1px solid #dedede;\n    box-sizing: border-box;\n    box-shadow: 4px 10px 20px rgba(0, 0, 0, 0.1);\n    border-radius: 10px;\n    padding: 32px;\n  }\n`;\n\nexport const FieldStyled = styled.div`\n  margin-top: 28px;\n  @media (min-width: 768px) {\n    &:first-child {\n      margin-top: 0;\n    }\n  }\n`;\n\nexport const LabelStyled = styled.h3`\n  font-size: 14px;\n  letter-spacing: 0.05em;\n  color: #848484;\n  text-transform: capitalize;\n`;\n\nexport const InputStyled = styled.input`\n  background: #ffffff;\n  height: 50px;\n  border: 1px solid #e5e5e5;\n  box-shadow: 4px 10px 20px rgba(0, 0, 0, 0.07);\n  border-radius: 10px;\n  padding: 0px 25px;\n  margin-top: 10px;\n  &::placeholder {\n    letter-spacing: 0.05em;\n    color: #b9b9b9;\n  }\n`;\n","export default function capitalize(text) {\n  const lower = text.toLowerCase();\n  return lower.charAt(0).toUpperCase() + lower.slice(1);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputStyled } from './styles';\nimport { useJobs } from '../../../../Context';\nimport capitalize from '../../../../utils/capitalize';\n\nconst InputHandler = ({ index, name }) => {\n  const { setFieldValue, jobsArray } = useJobs();\n  return name === 'valor' ? (\n    <InputStyled\n      type=\"number\"\n      placeholder=\"200\"\n      onChange={(e) => setFieldValue(index, name, e.target.value)}\n      value={jobsArray[index][name] || ''}\n    />\n  ) : (\n    <InputStyled\n      placeholder={\n        name === 'local'\n          ? 'Sala da cozinha'\n          : 'Pintura, drywall e massa corrida'\n      }\n      type=\"text\"\n      onChange={(e) => setFieldValue(index, name, capitalize(e.target.value))}\n      value={capitalize(jobsArray[index][name] || '')}\n    />\n  );\n};\n\nInputHandler.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default InputHandler;\n","import React from 'react';\nimport InputHandler from './InputHandler';\nimport { LabelStyled, FieldStyled } from './styles';\n\nconst Field = ({ index, label }) => (\n  <FieldStyled>\n    <LabelStyled>{label}</LabelStyled>\n    <InputHandler index={index} name={label} />\n  </FieldStyled>\n);\n\nexport default Field;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FieldsStyled } from './styles';\nimport Field from './Field';\n\nconst Fields = ({ index }) => (\n  <FieldsStyled>\n    <Field index={index} label=\"local\" />\n    <Field index={index} label=\"trabalho\" />\n    <Field index={index} label=\"valor\" />\n  </FieldsStyled>\n);\n\nFields.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Fields;\n","import React from 'react';\nimport { CloseIconStyled } from './styles';\nimport { useJobs } from '../../../Context';\nimport close from '../../../assets/icons/close.svg';\n\nconst CloseIcon = ({ id }) => {\n  const { removeJob } = useJobs();\n  return <CloseIconStyled src={close} onClick={() => removeJob(id)} />;\n};\n\nexport default CloseIcon;\n","import React from 'react';\nimport { useJobs } from '../../../Context';\nimport { JobStyled, LabelTitleStyled } from './styles';\nimport Fields from './fields';\nimport CloseIcon from './CloseIcon';\n\nconst Job = () => {\n  const { jobsArray } = useJobs();\n\n  return jobsArray.map((el, i) => (\n    <JobStyled key={el.id}>\n      <LabelTitleStyled>\n        Tarefa {i + 1}\n        <CloseIcon id={el.id} />\n      </LabelTitleStyled>\n      <Fields index={i} />\n    </JobStyled>\n  ));\n};\n\nexport default Job;\n","import styled from 'styled-components';\nimport { Document, Page, View, Text } from '@react-pdf/renderer';\nimport { LabelStyled } from '../job-container/job/fields/styles';\n\nexport const PDFWrapperStyled = styled.div`\n  margin-top: 12px;\n  padding: 20px;\n  min-height: 342px;\n  background: #ffffff;\n  border: 1px solid #e5e5e5;\n  box-shadow: 4px 10px 20px rgba(0, 0, 0, 0.07);\n  border-radius: 10px;\n`;\n\nexport const PreviewLabelStyled = styled(LabelStyled)`\n  margin-top: 50px;\n`;\n","import { StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n  page: {\n    padding: '10vw',\n    fontFamily: 'Calibri',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n\n  flex: { display: 'flex', flexDirection: 'column' },\n\n  micg: { marginTop: '7vw', fontSize: '32', fontWeight: '1000' },\n\n  description: { marginTop: '20px', fontSize: '16' },\n\n  job: { display: 'flex', flexDirection: 'column', marginTop: '40px' },\n\n  local: { fontWeight: 600 },\n\n  trabalho: { fontWeight: 600, marginTop: '7px' },\n\n  valor: { marginTop: '7px' },\n\n  lastPart: { marginTop: '40px', display: 'flex', flexDirection: 'column' },\n\n  date: { marginTop: '40px', textAlign: 'right' },\n\n  payment: { marginTop: '10px' },\n\n  bold: { fontWeight: 600 },\n});\n\nexport default styles;\n","import React, { useState } from 'react';\nimport styles from './styles';\nimport { Text } from '@react-pdf/renderer';\nimport capitalize from '../../../utils/capitalize';\nconst currentDate = new Date();\n\nconst DateWritten = () => {\n  const [date, useDate] = useState({\n    month: capitalize(\n      currentDate.toLocaleString('default', {\n        month: 'long',\n      })\n    ),\n    day: currentDate.toLocaleString().slice(0, 2),\n    year: currentDate.toLocaleString().split('/').pop().slice(0, 4),\n  });\n\n  return (\n    <Text style={styles.date}>\n      {date.day} de {date.month} de {date.year}\n    </Text>\n  );\n};\n\nexport default DateWritten;\n","import React from 'react';\nimport { Document, Page, Text, View, Font } from '@react-pdf/renderer';\nimport styles from './styles';\nimport DateWritten from './DateWritten';\n\nconst PDFDocument = ({ jobsArray, totalValue }) => (\n  <Document>\n    <Page style={styles.page} size=\"A4\">\n      <View style={styles.flex}>\n        <Text style={styles.micg}>MICG</Text>\n        <Text style={styles.description}>\n          Olá, conforme combinado, segue o orçamento:\n        </Text>\n      </View>\n      {jobsArray.map((el) => (\n        <View style={styles.job}>\n          <Text style={styles.local}>{el.local}</Text>\n          <Text style={styles.trabalho}>{el.trabalho}</Text>\n          <Text style={styles.valor}>Valor: {el.valor} reais</Text>\n        </View>\n      ))}\n\n      <View style={styles.lastPart}>\n        {jobsArray.length > 1 && (\n          <Text>\n            Valor total: <Text style={styles.bold}>{totalValue()}</Text> reais\n            (mão de obra)\n          </Text>\n        )}\n        <Text style={styles.payment}>\n          Formas de pagamento: a combinar (aceitamos cartão de crédito e\n          parcelamos)\n        </Text>\n      </View>\n\n      <Text style={styles.date}>\n        <DateWritten />\n      </Text>\n    </Page>\n  </Document>\n);\n\nFont.register({\n  family: 'Calibri',\n  fonts: [\n    {\n      src:\n        'https://db.onlinewebfonts.com/t/a78cfad3beb089a6ce86d4e280fa270b.ttf',\n    },\n    {\n      src:\n        'https://db.onlinewebfonts.com/t/c8980f67879f6f08737d47c2ecb1cc43.ttf',\n      fontWeight: 600,\n    },\n  ],\n});\n\nexport default PDFDocument;\n","import React from 'react';\nimport { PDFWrapperStyled, PreviewLabelStyled } from './styles';\nimport { GenerateButtonStyled } from '../job-container/styles';\nimport { View } from '@react-pdf/renderer';\nimport PDFDocument from './pdf-document';\nimport { useJobs } from '../../Context';\n\nconst Estimate = () => {\n  const { jobsArray, getTotalValue } = useJobs();\n  return (\n    <>\n      <PreviewLabelStyled>Preview</PreviewLabelStyled>\n      <PDFWrapperStyled>\n        <PDFDocument jobsArray={jobsArray} totalValue={getTotalValue} />\n      </PDFWrapperStyled>\n      <GenerateButtonStyled\n        document={\n          <PDFDocument jobsArray={jobsArray} totalValue={getTotalValue} />\n        }\n        fileName=\"test.pdf\"\n      >\n        Gerar PDF\n        {({ blob, url, loading, error }) => console.log(url, loading, error)}\n      </GenerateButtonStyled>\n    </>\n  );\n};\n\nexport default Estimate;\n","import React from 'react';\nimport { FormMobileStyled, JobWrapper } from './styles';\nimport AddJobTask from '../add-jobtask';\nimport Job from './job';\nimport Estimate from '../estimate';\n\nconst JobContainer = () => {\n  function generatePDF(e) {\n    e.preventDefault();\n  }\n  return (\n    <FormMobileStyled id=\"job\" onSubmit={generatePDF}>\n      <JobWrapper>\n        <Job />\n        <AddJobTask />\n      </JobWrapper>\n      <Estimate />\n    </FormMobileStyled>\n  );\n};\n\nexport default JobContainer;\n","import styled from 'styled-components';\n\nexport const LandingStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 38px;\n  @media (min-width: 768px) {\n    margin-top: 80px;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const TitleStyled = styled.h1`\n  font-weight: bold;\n  font-size: 38px;\n  line-height: 120%;\n  color: #505d68;\n`;\n\nexport const ContentStyled = styled.p`\n  margin-top: 18px;\n  font-size: 14px;\n  line-height: 21px;\n  /* or 150% */\n  color: #a1aeb7;\n`;\n\nexport const ButtonStyled = styled.button`\n  background: #424b5a;\n  box-shadow: 4px 10px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  width: 57%;\n  height: 42px;\n  margin-top: 21px;\n  max-width: 116px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n`;\n\nexport const ArrowStyled = styled.img`\n  width: 8px;\n  margin-left: 6px;\n  margin-top: 3px;\n`;\n","import React from 'react';\nimport arrow from '../../assets/icons/arrow.svg';\n\nimport {\n  LandingStyled,\n  TitleStyled,\n  ContentStyled,\n  ButtonStyled,\n  ArrowStyled,\n} from './styles';\n\nconst Landing = () => (\n  <LandingStyled>\n    <TitleStyled>Ficou fácil fazer os orçamentos</TitleStyled>\n    <ContentStyled>\n      Preencha os campos e um PDF com o orçamento vai ser gerado\n    </ContentStyled>\n    <ButtonStyled\n      onClick={() => document.getElementById('job').scrollIntoView('#id')}\n    >\n      Começar <ArrowStyled src={arrow} />\n    </ButtonStyled>\n  </LandingStyled>\n);\n\nexport default Landing;\n","import styled from 'styled-components';\n\nexport const HeaderStyled = styled.div`\n  display: flex;\n  align-items: center;\n  height: 54px;\n  background: #f2f5f7;\n  width: 100%;\n`;\n\nexport const LogoStyled = styled.h4`\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 48px;\n  color: #000000;\n  padding: 0 8%;\n`;\n","import React from 'react';\nimport { HeaderStyled, LogoStyled } from './style';\n\nconst Header = () => (\n  <HeaderStyled>\n    <LogoStyled>MICG</LogoStyled>\n  </HeaderStyled>\n);\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst ContentStyled = styled.div`\n  padding: 0 8% 80px 8%;\n  max-width: 1038px;\n  margin: auto;\n`;\n\nexport default ContentStyled;\n","import React from 'react';\nimport Context from './Context';\nimport JobContainer from './components/job-container';\nimport Landing from './components/landing';\nimport Header from './components/header';\nimport ContentStyled from './components/content-styled';\n\nconst App = () => (\n  <>\n    <Header />\n    <ContentStyled>\n      <Landing />\n      <Context>\n        <JobContainer />\n      </Context>\n    </ContentStyled>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GlobalStyle from './GlobalStyle';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}